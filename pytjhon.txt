51. How do you create a set in Python?
    - a) `[1, 2, 3]`
    - b) `{1, 2, 3}`
    - c) `(1, 2, 3)`
    - d) `{'1': 1, '2': 2, '3': 3}`

52. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    x.add(4)
    print(x)
    ```
    - a) `{1, 2, 3}`
    - b) `{1, 2, 3, 4}`
    - c) `{4, 1, 2, 3}`
    - d) `None`

53. What is the output of the following code?
    ```python
    x = (1, 2, 3)
    x = x + (4,)
    print(x)
    ```
    - a) `(1, 2, 3)`
    - b) `(1, 2, 3, 4)`
    - c) `(4, 1, 2, 3)`
    - d) `None`

54. What is the purpose of the `join()` method?
    - a) To join two strings together
    - b) To join the elements of a list into a single string
    - c) To join two lists together
    - d) To join two dictionaries together

55. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = x.copy()
    y.append(4)
    print(x)
    ```
    - a) `[1, 2, 3]`
    - b) `[1, 2, 3, 4]`
    - c) `[4, 1, 2, 3]`
    - d) `None`

56. What is the output of the following code?
    ```python
    x = "Hello"
    y = x.replace("H", "J")
    print(y)
    ```
    - a) `Jello`
    - b) `Hello`
    - c) `JHello`
    - d) `None`

57. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = [4, 5, 6]
    z = x + y
    print(z)
    ```
    - a) `[1, 2, 3]`
    - b) `[4, 5, 6]`
    - c) `[1, 2, 3, 4, 5, 6]`
    - d) `None`

58. How do you sort a list in Python?
    - a) `list.sort()`
    - b) `list.order()`
    - c) `list.arrange()`
    - d) `list.reorder()`

59. What is the output of the following code?
    ```python
    x = [3, 1, 2]
    x.sort()
    print(x)
    ```
    - a) `[1, 2, 3]`
    - b) `[3, 1, 2]`
    - c) `[2, 1, 3]`
    - d) `[3, 2, 1]`

60. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = x.pop()
    print(y)
    ```
    - a) `1`
    - b) `2`
    - c) `3`
    - d

) `None`

61. How do you check if a key exists in a dictionary?
    - a) `key in dict`
    - b) `key in dict.keys()`
    - c) `key in dict.values()`
    - d) `key in dict.items()`

62. What is the output of the following code?
    ```python
    x = {"name": "John", "age": 30}
    y = x.get("name")
    print(y)
    ```
    - a) `John`
    - b) `30`
    - c) `name`
    - d) `None`

63. What is the output of the following code?
    ```python
    x = {"name": "John", "age": 30}
    y = x["age"]
    print(y)
    ```
    - a) `John`
    - b) `30`
    - c) `age`
    - d) `None`

64. How do you remove a key-value pair from a dictionary?
    - a) `dict.remove(key)`
    - b) `dict.pop(key)`
    - c) `dict.delete(key)`
    - d) `dict.discard(key)`

65. What is the output of the following code?
    ```python
    x = {"name": "John", "age": 30}
    x["age"] = 31
    print(x)
    ```
    - a) `{"name": "John", "age": 30}`
    - b) `{"name": "John", "age": 31}`
    - c) `{"name": "John"}`
    - d) `None`

66. What is the output of the following code?
    ```python
    x = {"name": "John", "age": 30}
    del x["age"]
    print(x)
    ```
    - a) `{"name": "John", "age": 30}`
    - b) `{"name": "John"}`
    - c) `{"age": 30}`
    - d) `None`

67. What is the output of the following code?
    ```python
    x = "Hello, world!"
    y = x.split(",")
    print(y)
    ```
    - a) `['Hello', ' world!']`
    - b) `['Hello', 'world!']`
    - c) `['Hello world!']`
    - d) `None`

68. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = [4, 5, 6]
    z = x.extend(y)
    print(z)
    ```
    - a) `[1, 2, 3]`
    - b) `[4, 5, 6]`
    - c) `[1, 2, 3, 4, 5, 6]`
    - d) `None`

69. How do you convert a list to a tuple in Python?
    - a) `tuple(list)`
    - b) `list(tuple)`
    - c) `tuple()`
    - d) `list()`

70. What is the output of the following code?
    ```python
    x = 5
    y = "5"
    print(x == y)
    ```
    - a) `True`
    - b) `False`
    - c) `5`
    - d) `None`

71. How do you convert a string to a list in Python?
    - a) `list(string)`
    - b) `str(list)`
    - c) `string()`
    - d) `list()`

72. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = x.reverse()
    print(y)
    ```
    - a) `[1, 2, 3]`
    - b) `[3, 2, 1]`
    - c) `None`
    - d) `None`

73. How do you remove an element from a list by its value?
    - a) `list.remove(value)`
    - b) `list.pop(value)`
    - c) `list.delete(value)`
    - d) `list.discard(value)`

74. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = x.index(2)
    print(y)
    ```
    - a) `1`
    - b) `2`
    - c) `3`
    - d) `None`

75. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = x.count(2)
    print(y)
    ```
    - a) `1`
    - b) `2`
    - c) `3`
    - d) `None`

76. How do you add an element to a set in Python?
    - a) `set.add(element)`
    - b) `set.append(element)`
    - c) `set.insert(element)`
    - d) `set.extend(element)`

77. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    x.add(4)
    print(x)
    ```
    - a) `{1, 2, 3}`
    - b) `{1, 2, 3, 4}`
    - c) `{4, 1, 2, 3}`
    - d) `None`

78. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = {2, 3, 4}
    z = x.union(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{1, 2, 3, 4}`
    - d) `None`

79. How do you remove an element from a set in Python?
    - a) `set.remove(element)`
    - b) `set.pop(element)`
    - c) `set.delete(element)`
    - d) `set.discard(element)`

80. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    x.remove(2)
    print(x)
    ```
    - a) `{1, 2, 3}`
    - b) `{1, 3}`
    - c) `{2, 3}`
    - d) `None`

81. How do you check if a value exists in a set?
    - a) `value in set`
    - b) `value in set.keys()`
    - c) `value in set.values()`
    - d) `value in set.items()`

82. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = 2 in x
    print(y)
    ```
    - a) `True`
    - b) `False`
    - c) `2`
    - d) `None`

83. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = x.pop()
    print(y)
    ```
    - a) `1`
    - b) `2`
    - c) `3`
    - d) `None`

84. How do you clear all elements from a set?
    - a) `set.clear()`
    - b) `set.remove_all()`
    - c) `set.delete_all()`
    - d) `set.discard_all()`

85. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    x.clear()
    print(x)
    ```
    - a) `{1, 2, 3}`
    - b) `{}`
    - c) `None`
    - d) `None`

86. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = x.copy()
    y.add(4)
    print(x)
    ```
    - a) `{1, 2, 3}`
    - b) `{1, 2, 3, 4}`
    - c) `{4, 1, 2, 3}`
    - d) `None`

87. How do you find the length of a set?
    - a) `len(set)`
    - b) `set.length()`
    - c) `set.size()`
    - d) `set.count()`

88. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = len(x)
    print(y)
    ```
    - a) `1`
    - b) `2`
    - c) `3`
    - d) `None`

89. How do you find the intersection of two sets?
    - a) `set1.intersection(set2)`
    - b) `set1.union(set2)`
    - c) `set1.difference(set2)`
    - d) `set1.symmetric_difference(set2)`

90. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y

 = {2, 3, 4}
    z = x.intersection(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{2, 3}`
    - d) `None`

91. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = {2, 3, 4}
    z = x.difference(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{1}`
    - d) `None`

92. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = {2, 3, 4}
    z = x.symmetric_difference(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{1, 4}`
    - d) `None`

93. How do you find the difference of two sets?
    - a) `set1.difference(set2)`
    - b) `set1.union(set2)`
    - c) `set1.intersection(set2)`
    - d) `set1.symmetric_difference(set2)`

94. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = {2, 3, 4}
    z = x.difference(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{1}`
    - d) `None`

95. How do you find the symmetric difference of two sets?
    - a) `set1.symmetric_difference(set2)`
    - b) `set1.union(set2)`
    - c) `set1.intersection(set2)`
    - d) `set1.difference(set2)`

96. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = {2, 3, 4}
    z = x.symmetric_difference(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{1, 4}`
    - d) `None`

97. How do you find the union of two sets?
    - a) `set1.union(set2)`
    - b) `set1.intersection(set2)`
    - c) `set1.difference(set2)`
    - d) `set1.symmetric_difference(set2)`

98. What is the output of the following code?
    ```python
    x = {1, 2, 3}
    y = {2, 3, 4}
    z = x.union(y)
    print(z)
    ```
    - a) `{1, 2, 3}`
    - b) `{2, 3, 4}`
    - c) `{1, 2, 3, 4}`
    - d) `None`

99. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = [4, 5, 6]
    z = list(zip(x, y))
    print(z)
    ```
    - a) `[(1, 4), (2, 5), (3, 6)]`
    - b) `[(4, 1), (5, 2), (6, 3)]`
    - c) `[1, 2, 3, 4, 5, 6]`
    - d) `None`

100. What is the output of the following code?
    ```python
    x = [1, 2, 3]
    y = [4, 5, 6]
    z = zip(x, y)
    print(list(z))
    ```
    - a) `[(1, 4), (2, 5), (3, 6)]`
    - b) `[(4, 1), (5, 2), (6, 3)]`
    - c) `[1, 2, 3, 4, 5, 6]`
    - d) `None`
